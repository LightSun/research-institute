buildscript {
    ext {
        springBootVersion = "1.5.8.RELEASE"
    }
    repositories {
        jcenter()
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        //classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.19.2')
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
//apply plugin: 'com.palantir.docker'

group 'com.qchery'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

/*docker {
    name "${project.group}/${jar.baseName}"
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}*/

jar {
    exclude "application*.yml", "Jasypt*.md"
}

repositories {
    jcenter()
    mavenLocal()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
}

dependencies {

    compile(
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-actuator",
            "org.springframework.boot:spring-boot-starter-security",
            // "org.springframework.boot:spring-boot-starter-data-jpa", //data  冲突
             //aop
            "org.springframework.boot:spring-aop",
            // "org.aspectj:aspectjweaver1.8.10",

            "org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0",
            "com.github.ulisesbocchio:jasypt-spring-boot-starter:1.12",
            "com.alibaba:fastjson:1.2.31",
            "mysql:mysql-connector-java:8.0.11",
            "com.zaxxer:HikariCP:2.7.4",
            "org.codehaus.janino:janino:3.0.8",
//            "org.hsqldb:hsqldb:2.4.0"
//            "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.8.8",
            "com.alibaba:druid:1.1.9",
            "com.auth0:java-jwt:3.2.0",
            "io.jsonwebtoken:jjwt:0.7.0",
            "com.google.code.gson:gson:2.8.5"
    )
    testCompile(
            "org.springframework.boot:spring-boot-starter-test"
    )
}
